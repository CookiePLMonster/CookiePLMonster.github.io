@use "variables";
@use "external/fontawesome-glue" as fa;
@use "sass:color";
@use "sass:map";

// Mix-ins
%padding-nav {
    padding: variables.$padding-small variables.$padding-x-large;

    @media (max-width: variables.$xl-break) {
        padding: variables.$padding-small variables.$padding-large * 2;
    }

    @media (max-width: variables.$l-break) {
        padding: variables.$padding-small variables.$padding-large;
    }

    @media (max-width: variables.$m-break) {
        padding: variables.$padding-small variables.$padding-medium;
    }

    @media (max-width: variables.$sm-break) {
        padding: variables.$padding-small variables.$padding-x-small;
    }
}

%padding-post {
    padding: variables.$padding-x-small variables.$padding-x-large;

    @media (max-width: variables.$xl-break) {
        padding: variables.$padding-x-small variables.$padding-large * 2;
    }

    @media (max-width: variables.$l-break) {
        padding: variables.$padding-x-small variables.$padding-large;
    }

    @media (max-width: variables.$m-break) {
        padding: variables.$padding-x-small variables.$padding-medium;
    }

    @media (max-width: variables.$sm-break) {
        padding: variables.$padding-x-small variables.$padding-small;
    }
}

%header-txt-shadow {
    text-shadow: 2px 2px 3px variables.$text-shadow,
        -2px 2px 3px variables.$text-shadow,
        2px -2px 3px variables.$text-shadow,
        -2px -2px 3px variables.$text-shadow;
}

// Buttons
$button-colors: (
    docs: (color: var(--important-link-color), hover: var(--important-link-hover-color)),
    github: (color: var(--github-link-color), hover: var(--github-link-hover-color)),
    forums: (color: var(--forums-link-color), hover: var(--forums-link-hover-color)),
    patreon: (color: variables.$patreon-link-color),
    paypal: (color: variables.$paypal-link-color),
    ko-fi: (color: variables.$ko-fi-link-color),
    gog: (color: var(--gog-link-color), hover: var(--gog-link-hover-color)),
    steam: (color: var(--steam-link-color), hover: var(--steam-link-hover-color))
);

@mixin button-coloring($color, $inverse-hover-color) {
    color: $color;

    &:hover, &.inverse {
        background-color: $color;
    }

    &.inverse:hover {
        background-color: if($inverse-hover-color, $inverse-hover-color, color.adjust($color, $lightness: -15%));
    }
}

.button {
    border-radius: 0.3em;
    border: 2px solid;
    display: inline-block;
    padding: 0.5em 0.75em;
    font-weight: 500;

    &.smaller {
        padding: 0.25em 0.375em;
    }

    &.thinner {
        border-width: 1px;
        font-weight: 400;
    }

    &.rounder {
        border-radius: 1.5em;
    }

    &:hover, &.inverse {
        color: variables.$background-color !important;
        border-color: transparent;
    }

    @at-root button#{&} {
        @extend .thinner;
        -webkit-appearance: none;
        background-color: transparent;
    }

    @at-root a#{&},
    button#{&} {
        &:hover {
            text-decoration: none !important;
        }
    }

    @include button-coloring(variables.$link-color, null);
    @each $name, $colors in $button-colors {
        &.#{$name} {
            @include button-coloring(map.get($colors, color), map.get($colors, hover));
        }
    }
}

.flexible-buttons {
    @extend %flexible-2d-block;
}

%uncolored-link {
    a {
        color: unset;

        &:hover {
            color: color.adjust(variables.$link-color, $lightness: 10%);
            text-decoration: unset;
        }
    }
}

%flexible-2d-block {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.25em;
}

%highlight-block {
    border-left: 2px solid var(--blockquote-border-color);
    padding: 0.75em 1em;
    background-color: var(--blockquote-color);
    box-shadow: 0 2px 2px color.adjust(variables.$text-color-light, $alpha: -0.75);
}

%no-bullets {
    list-style-type: none;
    margin-inline-start: 0;
    line-height: 1.25;
}

%fa-before-after-icon {
    &:before, &:after {
        @extend %fa-icon;
        @extend .fa-solid;
    }
    &:before {
        margin-inline-end: 0.25em;
    }
    &:after {
        margin-inline-start: 0.25em;
    }
}

.dl-no-indent {
    dd {
        margin-inline-start: 0;
        margin-block-end: 1em;
    }
}

// Custom
.center-blocks {
    display: flex;
    justify-content: center;
    gap: 0.25em;
}

.right {
    float: right;
}

.upcase {
    text-transform: uppercase;
}

.pre-wrap {
    pre {
        text-wrap-mode: wrap;
    }
}

.left-page-margin {
    margin-inline-start: 1em;
}

.disclaimer {
    font-weight: bold;

    &.warning {
        @extend %fa-before-after-icon;
        &:before, &:after {
            content: fa.fa-content(fa.$fa-var-triangle-exclamation);
            color: DarkOrange;
        }
    }

    &.info {
        @extend %fa-before-after-icon;
        &:before, &:after {
            content: fa.fa-content(fa.$fa-var-circle-info);
        }
    }
}

.credit, .sidenote {
    font-style: italic;
}

.theme-icon {
    @extend %fa-icon;
    @extend .fa-solid;
}